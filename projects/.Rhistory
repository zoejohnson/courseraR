plot(x, y)
x<-c(1:40)
plot(x, y)
y
y <- sin(x)
plot(x, y)
volcano
persp(volcano, expand=0.2)
contour(volcano)
persp(volcano, expand=0.2)
swirl()
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
swirl()
q
swirl()
5 + 7
x <- 5+7
x
y<-x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2 + 1000
my_div
15:1
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Zoe")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " " )
paste(1:3, c("X", "Y", "Z"), collapse = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- vector c(44, NA, 5, NA)
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x >0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 12, NA)
vect2 <- unnamed(vect)
vect2 <- unname(vect)
info()
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
volcano
persp(volcano)
?persp
persp(volcano, expand = 0.2)
persp(volcano, expand = 0.2)
x <- 1:10
if (x>5) {x <- 0}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <-10
f(3)
?read.csv
dfiles <- list.files("diet_data", full.names = T)
dfiles
getwd()
setwd("~/coursera/courseraR/projects")
dfiles <- list.files("diet_data", full.names = T)
dread_files <- vector()
dread_files <- c()
dread_files <- append(dread_files, c(1, 2, 3))
dread_files
dread_files <- c()
for (x in 1:5) {dread_files <- append(dread_files, read.csv(dfiles[x]))}
dread_files
head(dread_files)
dread_files[1]
dread_files[2]
dfiles
read.csv(dfiles[1])
dandy <- read.csv(dfiles[1])
ddavid <- read.csv(dfiles[2])
ddf <- c(ddandy, ddavid)
ddf <- c(dandy, ddavid)
ddf
ddf <- data.frame(dandy, ddavid)
ddf
length(ddf)
ddf$Age
ddf <- merge(dandy, ddavid)
ddf
ddf <- data.frame(dandy, ddavid)
?data.frame
ddf <- data.frame(dandy, ddavid, check.rows = TRUE)
ddf
ddf <- data.frame(dandy, ddavid, check.names = FALSE)
ddf
ddf$Age
dandy
ddf <- c(dandy, ddavid)
ddf <- matrix(dandy, ddavid)
dread_files["Age"]
source("complete.R")
corr <- function(directory, threshold = 0){
files <- list.files(directory, full.names=TRUE)
number_of_complete_cases <- complete(directory)
for (x in length(files)) {
correlation <- if (number_of_complete_cases$nobs[x] > threshold) {
# if the complete cases > threshold, calculate the cor(sulfate, nitrate)
# cor(sulf, nitr) only at locations where this is true
file <- read.csv(files[x])
cor(file$sulfate, file$nitrate) #na.rm = TRUE)
} else if (sum(complete.cases(files[x])) == 0) {
numeric()
}
correlation
}
}
source("complete.R")
corr <- function(directory, threshold = 0){
files <- list.files(directory, full.names=TRUE)
number_of_complete_cases <- complete(directory)
correlation <- c()
for (x in length(files)) {
correlation <- if (number_of_complete_cases$nobs[x] > threshold) {
# if the complete cases > threshold, calculate the cor(sulfate, nitrate)
# cor(sulf, nitr) only at locations where this is true
file <- read.csv(files[x])
append(correlation, cor(file$sulfate, file$nitrate)) #na.rm = TRUE)
} else if (sum(complete.cases(files[x])) == 0) {
numeric()
}
correlation
}
}
cr <- corr("specdata", 150)
source("complete.R")
corr <- function(directory, threshold = 0){
files <- list.files(directory, full.names=TRUE)
number_of_complete_cases <- complete(directory)
correlation <- c()
for (x in 1:length(files)) {
correlation <- if (number_of_complete_cases$nobs[x] > threshold) {
# if the complete cases > threshold, calculate the cor(sulfate, nitrate)
# cor(sulf, nitr) only at locations where this is true
file <- read.csv(files[x])
append(correlation, cor(file$sulfate, file$nitrate)) #na.rm = TRUE)
} else if (sum(complete.cases(files[x])) == 0) {
numeric()
}
correlation
}
}
cr <- corr("specdata", 150)
source("complete.R")
corr <- function(directory, threshold = 0){
files <- list.files(directory, full.names=TRUE)
number_of_complete_cases <- complete(directory)
correlation <- c()
for (x in 1:length(files)) {
correlation <- if (number_of_complete_cases$nobs[x] > threshold) {
# if the complete cases > threshold, calculate the cor(sulfate, nitrate)
# cor(sulf, nitr) only at locations where this is true
file <- read.csv(files[x])
append(correlation, cor(file$sulfate, file$nitrate)) #na.rm = TRUE)
} else if (sum(complete.cases(files[x])) == 0) {
numeric()
}
}
correlation
}
cr <- corr("specdata", 150)
source("complete.R")
corr <- function(directory, threshold = 0){
files <- list.files(directory, full.names=TRUE)
number_of_complete_cases <- complete(directory)
correlation <- c()
for (x in 1:length(files)) {
if (number_of_complete_cases$nobs[x] > threshold) {
# if the complete cases > threshold, calculate the cor(sulfate, nitrate)
# cor(sulf, nitr) only at locations where this is true
file <- read.csv(files[x])
correlation <- append(correlation, cor(file$sulfate, file$nitrate)) #na.rm = TRUE)
} else if (sum(complete.cases(files[x])) == 0) {
correlation <- numeric()
}
}
correlation
}
cr <- corr("specdata", 150)
head(cr)
cr
source("complete.R")
corr <- function(directory, threshold = 0){
files <- list.files(directory, full.names=TRUE)
number_of_complete_cases <- complete(directory)
correlation <- c()
for (x in 1:length(files)) {
if (number_of_complete_cases$nobs[x] > threshold) {
# if the complete cases > threshold, calculate the cor(sulfate, nitrate)
# cor(sulf, nitr) only at locations where this is true
file <- read.csv(files[x])
correlation <- append(correlation, cor(file$sulfate, file$nitrate), na.rm = TRUE)
} else if (sum(complete.cases(files[x])) == 0) {
correlation <- numeric()
}
}
correlation
}
cr <- corr("specdata", 150)
dfile <- read.csv(dfiles[1])
dfile$Age
cor(dfile$Age, dfile$Weight)
cor(dfile$Day, dfile$Weight)
corrr <- c()
corrr <- append(corrr, cor(dfile$Day, dfile$Weight))
corrr
dlist <- c(dandy, ddavid, dfile)
for (x in 1:3) {filee <- read.csv(dfiles[x])
corrr <- append(corrr, cor(filee$Day, filee$Weight))}
corrr
for (x in 1:3) {filee <- read.csv(dfiles[x])
corrr <- append(corrr, cor(filee$Day, filee$Weight), na.rm = T)}
?else if
?else
source("complete.R")
corr <- function(directory, threshold = 0){
files <- list.files(directory, full.names=TRUE)
number_of_complete_cases <- complete(directory)
correlation <- c()
for (x in 1:length(files)) {
if (number_of_complete_cases$nobs[x] > threshold) {
# if the complete cases > threshold, calculate the cor(sulfate, nitrate)
# cor(sulf, nitr) only at locations where this is true
file <- read.csv(files[x])
correlation <- append(correlation, cor(file$sulfate, file$nitrate))#, na.rm = TRUE)
} #else if (sum(complete.cases(files[x])) == 0) {
#correlation <- numeric()
}
}
correlation
}
cr <- corr("specdata", 150)
corr("specdata", 150)
source("complete.R")
corr <- function(directory, threshold = 0){
files <- list.files(directory, full.names=TRUE)
number_of_complete_cases <- complete(directory)
correlation <- c()
for (x in 1:length(files)) {
if (number_of_complete_cases$nobs[x] > threshold) {
# if the complete cases > threshold, calculate the cor(sulfate, nitrate)
# cor(sulf, nitr) only at locations where this is true
file <- read.csv(files[x])
correlation <- append(correlation, cor(file$sulfate, file$nitrate))#, na.rm = TRUE)
} else if (sum(complete.cases(files[x])) == 0) {
correlation <- numeric()
}
}
print(correlation)
}
corr("specdata", 150)
source("complete.R")
corr <- function(directory, threshold = 0){
files <- list.files(directory, full.names=TRUE)
number_of_complete_cases <- complete(directory)
correlation <- vector()
for (x in 1:length(files)) {
if (number_of_complete_cases$nobs[x] > threshold) {
# if the complete cases > threshold, calculate the cor(sulfate, nitrate)
# cor(sulf, nitr) only at locations where this is true
file <- read.csv(files[x])
correlation <- append(correlation, cor(file$sulfate, file$nitrate))#, na.rm = TRUE)
} else if (sum(complete.cases(files[x])) == 0) {
correlation <- numeric()
}
}
correlation
}
cr <- corr("specdata", 150)
source("complete.R")
corr <- function(directory, threshold = 0){
files <- list.files(directory, full.names=TRUE)
number_of_complete_cases <- complete(directory)
correlation <- vector()
for (x in 1:length(files)) {
if (number_of_complete_cases$nobs[x] > threshold) {
# if the complete cases > threshold, calculate the cor(sulfate, nitrate)
# cor(sulf, nitr) only at locations where this is true
file <- read.csv(files[x])
correlation <- append(correlation, cor(file$sulfate, file$nitrate))#, na.rm = TRUE)
} else if (sum(complete.cases(files[x])) == 0) {
correlation <- numeric()
}
}
return(correlation)
}
cr <- corr("specdata", 150)
source("complete.R")
corr <- function(directory, threshold = 0){
files <- list.files(directory, full.names=TRUE)
number_of_complete_cases <- complete(directory)
correlation <- vector()
for (x in 1:length(files)) {
if (number_of_complete_cases$nobs[x] > threshold) {
# if the complete cases > threshold, calculate the cor(sulfate, nitrate)
# cor(sulf, nitr) only at locations where this is true
file <- read.csv(files[x])
correlation <- append(correlation, cor(file$sulfate, file$nitrate))#, na.rm = TRUE)
} else if (sum(complete.cases(files[x])) == 0) {
correlation <- numeric()
}
}
return(correlation)
return(1)
}
cr <- corr("specdata", 150)
cr
source("complete.R")
corr <- function(directory, threshold = 0){
files <- list.files(directory, full.names=TRUE)
number_of_complete_cases <- complete(directory)
correlation <- vector()
for (x in 1:length(files)) {
if (number_of_complete_cases$nobs[x] > threshold) {
# if the complete cases > threshold, calculate the cor(sulfate, nitrate)
# cor(sulf, nitr) only at locations where this is true
file <- read.csv(files[x])
correlation <- append(correlation, cor(file$sulfate, file$nitrate))#, na.rm = TRUE)
} else if (sum(complete.cases(files[x])) == 0) {
correlation <- numeric()
}
}
#return(correlation)
return(1)
}
cr <- corr("specdata", 150)
source("complete.R")
corr <- function(directory, threshold = 0){
files <- list.files(directory, full.names=TRUE)
number_of_complete_cases <- complete(directory)
correlation <- vector()
for (x in 1:length(files)) {
if (number_of_complete_cases$nobs[x] > threshold) {
# if the complete cases > threshold, calculate the cor(sulfate, nitrate)
# cor(sulf, nitr) only at locations where this is true
file <- read.csv(files[x])
correlation <- append(correlation, cor(file$sulfate, file$nitrate))#, na.rm = TRUE)
} else if (sum(complete.cases(files[x])) == 0) {
correlation <- numeric()
}
}
return(correlation)
}
cr <- corr("specdata", 150)
source("complete.R")
corr <- function(directory, threshold = 0){
files <- list.files(directory, full.names=TRUE)
number_of_complete_cases <- complete(directory)
correlation <- vector()
for (x in 1:length(files)) {
if (number_of_complete_cases$nobs[x] > threshold) {
# if the complete cases > threshold, calculate the cor(sulfate, nitrate)
# cor(sulf, nitr) only at locations where this is true
file <- read.csv(files[x])
correlation <- append(correlation, cor(file$sulfate, file$nitrate))#, na.rm = TRUE)
} else if (sum(complete.cases(files[x])) == 0) {
correlation <- numeric()
}
}
return(correlation)
}
corr("specdata", 330)
corr("specdata", 400)
corr("specdata", 1000)
source("complete.R")
corr <- function(directory, threshold = 0){
files <- list.files(directory, full.names=TRUE)
number_of_complete_cases <- complete(directory)
correlation <- vector()
for (x in 1:length(files)) {
if (number_of_complete_cases$nobs[x] > threshold) {
# if the complete cases > threshold, calculate the cor(sulfate, nitrate)
# cor(sulf, nitr) only at locations where this is true
file <- read.csv(files[x])
correlation <- append(correlation, cor(file$sulfate, file$nitrate, na.rm = T))#, na.rm = TRUE)
} else if (sum(complete.cases(files[x])) == 0) {
correlation <- numeric()
}
}
return(correlation)
}
cr <- corr("specdata", 150)
cr <- corr("specdata", 150)
?cor
source("complete.R")
corr <- function(directory, threshold = 0){
files <- list.files(directory, full.names=TRUE)
number_of_complete_cases <- complete(directory)
correlation <- vector()
for (x in 1:length(files)) {
if (number_of_complete_cases$nobs[x] > threshold) {
# if the complete cases > threshold, calculate the cor(sulfate, nitrate)
# cor(sulf, nitr) only at locations where this is true
file <- read.csv(files[x])
correlation <- append(correlation, cor(file$sulfate, file$nitrate, na, use = "complete"))#, na.rm = TRUE)
} else if (sum(complete.cases(files[x])) == 0) {
correlation <- numeric()
}
}
return(correlation)
}
cr <- corr("specdata", 150)
source("complete.R")
corr <- function(directory, threshold = 0){
files <- list.files(directory, full.names=TRUE)
number_of_complete_cases <- complete(directory)
correlation <- vector()
for (x in 1:length(files)) {
if (number_of_complete_cases$nobs[x] > threshold) {
# if the complete cases > threshold, calculate the cor(sulfate, nitrate)
# cor(sulf, nitr) only at locations where this is true
file <- read.csv(files[x])
correlation <- append(correlation, cor(file$sulfate, file$nitrate, use = "complete"))#, na.rm = TRUE)
} else if (sum(complete.cases(files[x])) == 0) {
correlation <- numeric()
}
}
return(correlation)
}
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
